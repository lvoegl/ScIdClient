[tool.poetry]
name = "scidclient"
version = "0.1.0"
description = ""
authors = ["Lukas VÃ¶gl <lukas@voegl.org>"]
readme = "README.md"
license = "MIT"
packages = [{include = "scidclient"}]

[tool.poetry.dependencies]
python = "^3.11"
requests = "^2.32.3"

[tool.poetry.group.dev.dependencies]
mypy = "^0.991"
mypy-extensions = "^0.4.3"
pre-commit = "^2.15.0"
bandit = "^1.7.1"
black = "^22.12.0"
coverage = "^7.0.0"
coverage-badge = "^1.1.0"
pytest-html = "^3.1.1"
pytest-cov = "^4.0.0"
isort = {extras = ["colors"], version = "^5.10.1"}
docformatter = {extras = ["tomli"], version = "^1.5"}
pytest = "^7.2.0"
pyupgrade = "^3.3.1"
safety = "^2.3.5"
sphinx = "^5.3.0"
furo = "^2023.3.27"
types-requests = "^2.28.11.17"

[tool.mypy]
python_version = "3.11"
exclude = ["sphinx"]
pretty = true
show_traceback = true
color_output = true

disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_unused_ignores = true
warn_no_return = true
warn_redundant_casts = true
allow_redefinition = false
ignore_missing_imports = true
implicit_reexport = false
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
warn_unreachable = true
warn_unused_configs = true

[tool.black]
line-length = 100
color = true
target-version = ['py311']

[tool.isort]
multi_line_output = 3
indent = 4
include_trailing_comma = true
color_output = true
force_grid_wrap = 0
use_parentheses = true
line_length = 100
profile = "black"
src_paths = ["scidclient", "tests"]
known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
force_to_top = "*"

[tool.pytest.ini_options]
norecursedirs =["*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]
branch = true

[tool.coverage.report]
sort = "Cover"
skip_covered = true
precision = 2
exclude_lines = [
  'pragma: no cover',
  'def __repr__',
  'if self.debug:',
  'if settings.DEBUG',
  'raise AssertionError',
  'raise NotImplementedError',
  'if 0:',
  'if __name__ == .__main__.:',
  'class .*\bProtocol\):',
  '@(abc\.)?abstractmethod',
]
show_missing = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
